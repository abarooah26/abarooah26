Q1.)
class Circle{
    constructor(radius,color){
        this.radius = radius;
        this.color = color;
    }

    setRadius(radius){
       this.radius = radius;
    }

    getRadius(){
        return parseFloat(this.radius);
    }

    setColor(color){
        this.color = color;
    }

    getColor(color){
        return this.color;
    }

    toString(){    
        return `${this.radius} ${this.color}`;
    }

    getArea(){
        return parseFloat(Math.PI * this.radius * this.radius);
    }

    getCircumference (){
        return parseFloat( (2 * Math.PI) * this.radius);
    }
}

let objInst = new Circle(10.3,"RED");
console.log("toString: "+objInst.toString());
objInst.setRadius(25.3);
console.log("getRadius: "+objInst.getRadius().toFixed(2));
objInst.setColor("WHITE");
console.log("getColor: "+objInst.getColor());
console.log("getArea: "+objInst.getArea().toFixed(2));
console.log("getColor: "+objInst.getCircumference().toFixed(2));
console.log("toString: "+objInst.toString());


Q.2)
let movieDetails = [];
class Movie {
    constructor(title,studio,rating){
        this.title = title;
        this.studio = studio;
        this.rating = rating;
        this.setPG();
    }

    setPG(){
        var obj = {};
        obj.title = this.title;
        obj.studio = this.studio;
        obj.rating = this.rating == "" ? "PG" : this.rating ;
        movieDetails.push(obj);  
    }

    getPG(movieName){
       let result =  movieDetails.filter(elm => ( elm.title.toLowerCase() === movieName.toLowerCase() && elm.rating === "PG"));
       return result;
    }
}
let objInstOne = new Movie("Casino Royale","Eon Productions","PGÂ­13");
let objInstTwo = new Movie("007","Eon Productions","PG");
console.log(objInstOne.getPG("Casino Royale"))
console.log(objInstTwo.getPG("007"))

Q.3)
class Person{
    constructor(name,age,address,occupation){
        this.name = name;
        this.age = age;
        this.address = address;
        this.occupation = occupation;
    }

    setName(name){
        this.name = name;
    }

    getName(){
        return this.name;
    }

    setAge(age){
        this.age = age;
    }

    getAge(){
        return this.age;
    }

    setAddress(address){
        this.address = address;
    }

    getAddress(){
        return this.address;
    }

    setoccupation(occupation){
        this.occupation = occupation;
    }

    getOccupation(){
        return this.occupation;
    }

    toString(){
        let personData = `Name: ${this.getName()}\nAge: ${this.getAge()}\nAddress: ${this.getAddress()}\nOccupation: ${this.getOccupation()}`
        return personData;
    }
}

let personObj = new Person("John",24,"14,Casino Street","Software Developer");
console.log(personObj.toString());


Q4.)
const baseFare = 50;
const costPerMin = 5;
const costPerMile = 5;
const bookFee = 12;
const surgeBoost = 3;
class UberPrice{
   constructor(rideDistance,rideTime){        
        this.rideDistance = rideDistance;
        this.rideTime = rideTime;
   }

   setRideDistance(rideDistance){
    this.rideDistance = rideDistance;
   }

   getRideDistance(){
    return this.rideDistance;
   }

   setRideTime(rideTime){
    this.rideTime = rideTime;
   }

   getRideTime(){
       return rideTime;
   }

   getPrice(){
        let result = baseFare+( (costPerMin * this.rideTime)+(costPerMile * this.rideDistance) * surgeBoost) + bookFee;
        return result;
   }
}

let priceObj = new UberPrice(10,30);
console.log(priceObj.getPrice());


Q5.)
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>hello</h1>
    <script src="Movie.js"></script>
    <script src="Circle.js"></script>
    <script src="Person.js"></script>
    <script src="UberPrice.js"></script>
</body>
</html> 
